<?php

/**
 * @file
 * Falcon_gift_ecards.module file.
 */

/**
 * Implements hook_order_checkout_prepare_alter().
 *
 * Creating ecard entities and prepare post data to create an order.
 *
 * @param array $data
 *   Array of sent data to commerce/order/create.
 *
 * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
 * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
 */
function falcon_gift_ecards_order_checkout_prepare_alter(array &$data) {
  foreach ($data['order']['order_items'] as $key => $item) {
    if (array_key_exists('field_card_delivery', $item) &&
      $item['field_card_delivery'] === 'email' &&
      !empty($item['field_card'])) {

      $storage = Drupal::entityTypeManager()->getStorage('gift_cards');
      $entityData = $item['field_card'];
      $entityData['type'] = 'ecard';

      try {
        // Creating ecard entity.
        $entity = $storage->create($entityData);
        $entity->save();

        // Preparing post data to create an order.
        $data['order']['order_items'][$key]['field_card'] = $entity->id();
      }
      catch (Exception $e) {
        Drupal::logger('falcon_gift_ecards')->alert('Can not create ecard entity. Error: ' . $e->getMessage());
      }
    }
  }

}

/**
 * Implements hook_mail().
 *
 * Captures the outgoing mail ecard and sets appropriate message body and headers.
 */
function falcon_gift_ecards_mail($key, &$message, $params) {
  switch ($key) {
    case 'ecard_mail':
      if (isset($params['headers'])) {
        $message['headers'] = array_merge($message['headers'], $params['headers']);
      }

      $message['format'] = 'text/html';
      $message['from'] = $params['from'];
      $message['subject'] = $params['subject'];
      $message['body'][] = $params['body'];
  }

}
